"use strict";(self.webpackChunkapp_docs=self.webpackChunkapp_docs||[]).push([[729],{915:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>t,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>d});var r=i(4848),s=i(8453);const o={id:"github-workflow",title:"GitHub Workflow",sidebar_label:"GitHub Workflow"},t="GitHub Workflow",l={id:"continuous-integration/github-workflow",title:"GitHub Workflow",description:"This document outlines the branch naming conventions, issue naming conventions, and commit message guidelines for the AI-Powered Platform for Smart City Issue Detection & Resolution project to ensure a clean, organized, and easily navigable codebase.",source:"@site/docs/continuous-integration/github_workflow.md",sourceDirName:"continuous-integration",slug:"/continuous-integration/github-workflow",permalink:"/Documentation/docs/continuous-integration/github-workflow",draft:!1,unlisted:!1,editUrl:"https://github.com/PI-2024-2025-NAP/docs/continuous-integration/github_workflow.md",tags:[],version:"current",frontMatter:{id:"github-workflow",title:"GitHub Workflow",sidebar_label:"GitHub Workflow"},sidebar:"tutorialSidebar",previous:{title:"Continuous Integration",permalink:"/Documentation/docs/continuous-integration/"}},c={},d=[{value:"Branch Naming Convention",id:"branch-naming-convention",level:2},{value:"Feature Branch",id:"feature-branch",level:3},{value:"Bugfix Branch",id:"bugfix-branch",level:3},{value:"Hotfix Branch",id:"hotfix-branch",level:3},{value:"Experimental Branch",id:"experimental-branch",level:3},{value:"Refactor Branch",id:"refactor-branch",level:3},{value:"Documentation Branch",id:"documentation-branch",level:3},{value:"Release Branch",id:"release-branch",level:3},{value:"Commit Message Guidelines",id:"commit-message-guidelines",level:2},{value:"Commit Format:",id:"commit-format",level:3},{value:"Pull Request Naming Convention",id:"pull-request-naming-convention",level:2},{value:"PR Types:",id:"pr-types",level:3},{value:"Examples:",id:"examples",level:3},{value:"Issue Naming Convention",id:"issue-naming-convention",level:2},{value:"Feature Request",id:"feature-request",level:3},{value:"Bug Report",id:"bug-report",level:3},{value:"Task / Improvement",id:"task--improvement",level:3}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"github-workflow",children:"GitHub Workflow"})}),"\n",(0,r.jsxs)(n.p,{children:["This document outlines the branch naming conventions, issue naming conventions, and commit message guidelines for the ",(0,r.jsx)(n.strong,{children:"AI-Powered Platform for Smart City Issue Detection & Resolution"})," project to ensure a clean, organized, and easily navigable codebase."]}),"\n",(0,r.jsx)(n.h2,{id:"branch-naming-convention",children:"Branch Naming Convention"}),"\n",(0,r.jsx)(n.p,{children:"To maintain a well-organized repository, we follow the following branch naming conventions:"}),"\n",(0,r.jsx)(n.h3,{id:"feature-branch",children:"Feature Branch"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"feature/<feature_name>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Used for developing new features or functionality."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"feature/user-authentication"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bugfix-branch",children:"Bugfix Branch"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"bugfix/<bug_name>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Used for fixing bugs or issues identified in the code."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"bugfix/login-error"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"hotfix-branch",children:"Hotfix Branch"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"hotfix/<critical_bug_name>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Reserved for critical fixes, often in production environments."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"hotfix/critical-login-failure"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"experimental-branch",children:"Experimental Branch"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"experiment/<experiment_name>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Used for testing new ideas, experimental features, or concepts."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"experiment/new-algorithm"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"refactor-branch",children:"Refactor Branch"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"refactor/<refactor_name>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Used for refactoring purposes."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"refactor/user-account"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"documentation-branch",children:"Documentation Branch"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"docs/<section>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Used exclusively for updating project documentation."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"docs/architecture-section"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"release-branch",children:"Release Branch"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"release/<version_number>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": Used to prepare a specific version of the project for release."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"release/v1.0.0"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"commit-message-guidelines",children:"Commit Message Guidelines"}),"\n",(0,r.jsx)(n.p,{children:"Commit messages should be clear and descriptive to make it easier to track changes over time. Follow this format:"}),"\n",(0,r.jsx)(n.h3,{id:"commit-format",children:"Commit Format:"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"[Task]: <short description>"})}),"\n",(0,r.jsxs)(n.p,{children:[(0,r.jsx)(n.strong,{children:"Example"}),":"]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"docs: Project Overview, Introduction, Product Concept, Architecture, Information Perspective"})}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"This format helps maintain a clean and understandable commit history."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"pull-request-naming-convention",children:"Pull Request Naming Convention"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"<type>: <short description> [Issue/Feature #ID]"})}),"\n",(0,r.jsx)(n.h3,{id:"pr-types",children:"PR Types:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"feature"}),": For adding new features or functionalities."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"bugfix"}),": For fixing bugs or issues in the code."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"hotfix"}),": For addressing critical issues, usually in production."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"refactor"}),": For code improvements that don\u2019t change functionality."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"docs"}),": For updating or fixing project documentation."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"examples",children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"feature: Implement user authentication [Feature #123]"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"bugfix: Fix login validation issue [Bug #456]"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"hotfix: Critical issue with payment processing [Hotfix #789]"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"refactor: Simplify user service code [Task #654]"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.code,{children:"docs: Update API documentation [Task #321]"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"issue-naming-convention",children:"Issue Naming Convention"}),"\n",(0,r.jsx)(n.p,{children:"When creating issues in GitHub, we follow these naming conventions to clearly identify the type of issue and its purpose:"}),"\n",(0,r.jsx)(n.h3,{id:"feature-request",children:"Feature Request"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"[Feature]: <short description>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": For requesting new features or functionality."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"[Feature]: Add User Authentication"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"bug-report",children:"Bug Report"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"[Bug]: <short description>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": For reporting bugs or errors in the system."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"[Bug]: Fix login error on mobile devices"})]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"task--improvement",children:"Task / Improvement"}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.code,{children:"[Task]: <short description>"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Purpose"}),": For general tasks, improvements, or refactoring."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Example"}),": ",(0,r.jsx)(n.code,{children:"[Task]: Refactor database connection logic"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.p,{children:"By following these conventions, the project remains organized, making collaboration more efficient and ensuring that the repository is easy to navigate for all contributors."})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>l});var r=i(6540);const s={},o=r.createContext(s);function t(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),r.createElement(o.Provider,{value:n},e.children)}}}]);