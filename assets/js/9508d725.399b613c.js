"use strict";(self.webpackChunkapp_docs=self.webpackChunkapp_docs||[]).push([[73],{8194:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var r=s(4848),i=s(8453);const t={id:"architecture-diagram",title:"Architectural Diagram",sidebar_label:"Architectural Diagram"},a=void 0,o={id:"architecture-notebook/architecture-diagram",title:"Architectural Diagram",description:"System Architecture Diagram",source:"@site/docs/architecture-notebook/architecture-diagram.md",sourceDirName:"architecture-notebook",slug:"/architecture-notebook/architecture-diagram",permalink:"/Documentation/docs/architecture-notebook/architecture-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/PI-2024-2025-NAP/docs/architecture-notebook/architecture-diagram.md",tags:[],version:"current",frontMatter:{id:"architecture-diagram",title:"Architectural Diagram",sidebar_label:"Architectural Diagram"},sidebar:"tutorialSidebar",previous:{title:"Requirements and Constraints",permalink:"/Documentation/docs/architecture-notebook/requirements_and_constrains"},next:{title:"Tech Stack",permalink:"/Documentation/docs/architecture-notebook/tech_stack"}},l={},c=[{value:"System Architecture Diagram",id:"system-architecture-diagram",level:2},{value:"Key Components",id:"key-components",level:2},{value:"1. User Interaction Layer (Frontend &amp; Mobile Application)",id:"1-user-interaction-layer-frontend--mobile-application",level:3},{value:"2. Data Processing &amp; Business Logic Layer (ATCLL Kubernetes Clusters)",id:"2-data-processing--business-logic-layer-atcll-kubernetes-clusters",level:3},{value:"API Layer (Kubernetes Pod)",id:"api-layer-kubernetes-pod",level:4},{value:"Business Logic Layer (Kubernetes Pod)",id:"business-logic-layer-kubernetes-pod",level:4},{value:"Web Interface Pod",id:"web-interface-pod",level:4},{value:"3. DataBase",id:"3-database",level:3},{value:"Cassandra: Benefits and Why the choice",id:"cassandra-benefits-and-why-the-choice",level:4},{value:"4. Data Ingestion &amp; Event Streaming Layer",id:"4-data-ingestion--event-streaming-layer",level:3},{value:"Edge Data Ingestion Layer (Kubernetes Pod)",id:"edge-data-ingestion-layer-kubernetes-pod",level:4},{value:"Kafka Broker (Kubernetes Pod)",id:"kafka-broker-kubernetes-pod",level:4},{value:"5. AI/ML Processing Layer (NAP VMs)",id:"5-aiml-processing-layer-nap-vms",level:3},{value:"6. External Data Processing (Aveiro Tech City Living Lab)",id:"6-external-data-processing-aveiro-tech-city-living-lab",level:3}];function d(e){const n={h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"system-architecture-diagram",children:"System Architecture Diagram"}),"\n",(0,r.jsxs)(n.p,{children:["Below is a high-level diagram illustrating the system architecture of the ",(0,r.jsx)(n.strong,{children:"AI-Powered Platform for Smart City Issue Detection & Resolution"}),", showing how the various components and technologies are integrated to form a cohesive and scalable platform."]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"System Architecture Diagram",src:s(1596).A+""})}),"\n",(0,r.jsxs)(n.p,{children:["The diagram represents a ",(0,r.jsx)(n.strong,{children:"modern, scalable, and distributed system"})," designed for ",(0,r.jsx)(n.strong,{children:"real-time data processing, analytics, and smart city applications"}),". The architecture integrates ",(0,r.jsx)(n.strong,{children:"Kubernetes clusters, event-driven communication, and machine learning components"})," to process incidents, analyze data, and deliver insights to both ",(0,r.jsx)(n.strong,{children:"citizens and city operators"}),"."]}),"\n",(0,r.jsx)(n.h2,{id:"key-components",children:"Key Components"}),"\n",(0,r.jsx)(n.h3,{id:"1-user-interaction-layer-frontend--mobile-application",children:"1. User Interaction Layer (Frontend & Mobile Application)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Citizens"})," interact with the system through a ",(0,r.jsx)(n.strong,{children:"mobile application"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["The app connects to the backend services via ",(0,r.jsx)(n.strong,{children:"RESTful APIs"})," and supports:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"User authentication"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Problem reporting"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Status tracking"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"SendGrid"})," (a third-party email service) is used for notifications, alerts and identity confirmation."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"2-data-processing--business-logic-layer-atcll-kubernetes-clusters",children:"2. Data Processing & Business Logic Layer (ATCLL Kubernetes Clusters)"}),"\n",(0,r.jsxs)(n.p,{children:["This section is the ",(0,r.jsx)(n.strong,{children:"core of the system"}),", responsible for handling API requests, processing business logic, and managing data."]}),"\n",(0,r.jsx)(n.h4,{id:"api-layer-kubernetes-pod",children:"API Layer (Kubernetes Pod)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Includes controllers such as:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Auth Controller"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"User Controller"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Problem Controller"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.strong,{children:"Report Controller"})}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Handles ",(0,r.jsx)(n.strong,{children:"authentication, user management, problem management and report submission"}),"."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"business-logic-layer-kubernetes-pod",children:"Business Logic Layer (Kubernetes Pod)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Problem Service"})," \u2013 Processes user-reported issues."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Problem Clustering"})," \u2013 Groups similar problems for better analysis."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Image Processing"})," \u2013 Anonimates and pre-processes images."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Location Finder"})," \u2013 Determines the location of reported incidents using H3."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"web-interface-pod",children:"Web Interface Pod"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Provides a ",(0,r.jsx)(n.strong,{children:"web-based UI"})," for city operators to monitor and manage reports."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"3-database",children:"3. DataBase"}),"\n",(0,r.jsx)(n.h4,{id:"cassandra-benefits-and-why-the-choice",children:"Cassandra: Benefits and Why the choice"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Scalability"}),": Cassandra scales horizontally by simply adding new nodes, making it ideal for handling growing data loads."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"High Availability"}),": It offers robust replication and a decentralized architecture, ensuring continuous service even during node failures."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Performance"}),": Optimized for fast read operations, Cassandra efficiently handles high-throughput workloads with low latency."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Fault Tolerance"}),": Its distributed, peer-to-peer design makes the system resilient to hardware failures and network issues."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Flexible Data Model"}),": Supports a wide range of data structures, allowing adaptability as application requirements evolve."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"4-data-ingestion--event-streaming-layer",children:"4. Data Ingestion & Event Streaming Layer"}),"\n",(0,r.jsx)(n.h4,{id:"edge-data-ingestion-layer-kubernetes-pod",children:"Edge Data Ingestion Layer (Kubernetes Pod)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Connects with ",(0,r.jsx)(n.strong,{children:"MQTT Broker"})," to subscribe to ",(0,r.jsx)(n.strong,{children:"real-time data from external sources"})," like the location of the ",(0,r.jsx)(n.strong,{children:"PIXKIT"})," and to check if an incident is resolved."]}),"\n",(0,r.jsxs)(n.li,{children:["Also connects to publish, based on the ",(0,r.jsx)(n.strong,{children:"PIXKIT's"})," location, if it passed close to any pending or in-progress incident."]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"kafka-broker-kubernetes-pod",children:"Kafka Broker (Kubernetes Pod)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Uses ",(0,r.jsx)(n.strong,{children:"Kafka"})," as the ",(0,r.jsx)(n.strong,{children:"central internal event-streaming platform"}),"."]}),"\n",(0,r.jsxs)(n.li,{children:["Manages ",(0,r.jsx)(n.strong,{children:"asynchronous data processing"}),"."]}),"\n",(0,r.jsx)(n.li,{children:"Used to manage many requests to generate images' descriptions and classifications"}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"5-aiml-processing-layer-nap-vms",children:"5. AI/ML Processing Layer (NAP VMs)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The system integrates ",(0,r.jsx)(n.strong,{children:"Machine Learning (ML)"})," and ",(0,r.jsx)(n.strong,{children:"Large Language Models (LLMs)"})," for advanced data processing."]}),"\n",(0,r.jsxs)(n.li,{children:["Runs on ",(0,r.jsx)(n.strong,{children:"GPU-powered VMs"}),", supporting:","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"AI-driven analytics"})," such as image classification"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Natural language processing"})," to generate descriptions for images"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"6-external-data-processing-aveiro-tech-city-living-lab",children:"6. External Data Processing (Aveiro Tech City Living Lab)"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["A separate ",(0,r.jsx)(n.strong,{children:"IoT-based system"})," that collects ",(0,r.jsx)(n.strong,{children:"real-time physical data"})," if it is active (when the PIXKIT passed close to an incident)."]}),"\n",(0,r.jsxs)(n.li,{children:["Includes a ",(0,r.jsx)(n.strong,{children:"Computer Vision Instance"})," for detecting incidents and their resolved trust level."]}),"\n",(0,r.jsxs)(n.li,{children:["Uses an ",(0,r.jsx)(n.strong,{children:"MQTT Broker"})," to publish and consume messages."]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},1596:(e,n,s)=>{s.d(n,{A:()=>r});const r=s.p+"assets/images/architecture.1.0.0-e7eb96c1a444a099e6e81fb8398c8745.svg"},8453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>o});var r=s(6540);const i={},t=r.createContext(i);function a(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(t.Provider,{value:n},e.children)}}}]);