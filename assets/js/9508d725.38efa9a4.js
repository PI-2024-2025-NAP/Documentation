"use strict";(self.webpackChunkapp_docs=self.webpackChunkapp_docs||[]).push([[73],{8194:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>t,metadata:()=>o,toc:()=>c});var i=r(4848),s=r(8453);const t={id:"architecture-diagram",title:"Architectural Diagram",sidebar_label:"Architectural Diagram"},a=void 0,o={id:"architecture-notebook/architecture-diagram",title:"Architectural Diagram",description:"System Architecture Diagram",source:"@site/docs/architecture-notebook/architecture-diagram.md",sourceDirName:"architecture-notebook",slug:"/architecture-notebook/architecture-diagram",permalink:"/Documentation/docs/architecture-notebook/architecture-diagram",draft:!1,unlisted:!1,editUrl:"https://github.com/PI-2024-2025-NAP/docs/architecture-notebook/architecture-diagram.md",tags:[],version:"current",frontMatter:{id:"architecture-diagram",title:"Architectural Diagram",sidebar_label:"Architectural Diagram"},sidebar:"tutorialSidebar",previous:{title:"Requirements and Constraints",permalink:"/Documentation/docs/architecture-notebook/requirements_and_constrains"},next:{title:"Deploy Diagram",permalink:"/Documentation/docs/architecture-notebook/deploy-diagram"}},l={},c=[{value:"System Architecture Diagram",id:"system-architecture-diagram",level:2},{value:"Key Components",id:"key-components",level:2},{value:"1. User Interaction Layer (Frontend &amp; Mobile Application)",id:"1-user-interaction-layer-frontend--mobile-application",level:3},{value:"2. Business Logic Layer",id:"2-business-logic-layer",level:3},{value:"API Layer (Kubernetes Pod)",id:"api-layer-kubernetes-pod",level:4},{value:"Business Logic Layer (Kubernetes Pod)",id:"business-logic-layer-kubernetes-pod",level:4},{value:"3. Databases",id:"3-databases",level:3},{value:"Main Storage: Cassandra",id:"main-storage-cassandra",level:4},{value:"File Storage: MinIO",id:"file-storage-minio",level:4},{value:"5. Event Streaming Layer (Kafka Broker)",id:"5-event-streaming-layer-kafka-broker",level:3},{value:"Kafka Broker (Kubernetes Pod)",id:"kafka-broker-kubernetes-pod",level:4},{value:"6. LLM Processing Layer",id:"6-llm-processing-layer",level:3}];function d(e){const n={h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h2,{id:"system-architecture-diagram",children:"System Architecture Diagram"}),"\n",(0,i.jsxs)(n.p,{children:["Below is a high-level diagram illustrating the system architecture of the ",(0,i.jsx)(n.strong,{children:"AI-Powered Platform for Smart City Issue Detection & Resolution"}),", showing how the various components and technologies are integrated to form a cohesive and scalable platform."]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.img,{alt:"System Architecture Diagram",src:r(1467).A+""})}),"\n",(0,i.jsxs)(n.p,{children:["The diagram represents a ",(0,i.jsx)(n.strong,{children:"modern, scalable, and distributed system"})," designed for ",(0,i.jsx)(n.strong,{children:"real-time data processing, analytics, and smart city applications"}),". The architecture integrates ",(0,i.jsx)(n.strong,{children:"Kubernetes clusters, event-driven communication, and machine learning components"})," to process incidents, analyze data, and deliver insights to both ",(0,i.jsx)(n.strong,{children:"citizens and city operators"}),"."]}),"\n",(0,i.jsx)(n.h2,{id:"key-components",children:"Key Components"}),"\n",(0,i.jsx)(n.h3,{id:"1-user-interaction-layer-frontend--mobile-application",children:"1. User Interaction Layer (Frontend & Mobile Application)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Citizens"})," interact with the system through a ",(0,i.jsx)(n.strong,{children:"mobile application"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["The app connects to the backend services via ",(0,i.jsx)(n.strong,{children:"RESTful APIs"})," and supports:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"User authentication"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Problem reporting"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Status tracking"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"SendGrid"})," (a third-party email service) is used for notifications, alerts and identity confirmation."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"2-business-logic-layer",children:"2. Business Logic Layer"}),"\n",(0,i.jsxs)(n.p,{children:["This section is the ",(0,i.jsx)(n.strong,{children:"core of the system"}),", responsible for handling API requests, processing business logic, and managing data."]}),"\n",(0,i.jsx)(n.h4,{id:"api-layer-kubernetes-pod",children:"API Layer (Kubernetes Pod)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Includes controllers such as:","\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Auth Controller"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"User Controller"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Occurrence Controller"})}),"\n",(0,i.jsx)(n.li,{children:(0,i.jsx)(n.strong,{children:"Incident Controller"})}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["Handles ",(0,i.jsx)(n.strong,{children:"authentication, user management, problem management and report submission"}),"."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"business-logic-layer-kubernetes-pod",children:"Business Logic Layer (Kubernetes Pod)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Contains the core business logic for the system, including:"}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Auth Service"})," \u2013 Manages user authentication and authorization."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"LLM Producer"})," - Connects to the Kafka broker to produce messages for LLM processing."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Occurrence Service"})," \u2013 Processes user-reported issues."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"3-databases",children:"3. Databases"}),"\n",(0,i.jsx)(n.p,{children:"Below are the main databases used in the system, each serving a specific purpose:"}),"\n",(0,i.jsx)(n.h4,{id:"main-storage-cassandra",children:"Main Storage: Cassandra"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scalability"}),": Cassandra scales horizontally by simply adding new nodes, making it ideal for handling growing data loads."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High Availability"}),": It offers robust replication and a decentralized architecture, ensuring continuous service even during node failures."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Performance"}),": Optimized for fast read operations, Cassandra efficiently handles high-throughput workloads with low latency."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Fault Tolerance"}),": Its distributed, peer-to-peer design makes the system resilient to hardware failures and network issues."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexible Data Model"}),": Supports a wide range of data structures, allowing adaptability as application requirements evolve."]}),"\n"]}),"\n",(0,i.jsx)(n.h4,{id:"file-storage-minio",children:"File Storage: MinIO"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"S3 API Compatibility"}),": MinIO is fully compatible with the Amazon S3 API, allowing for seamless integration with existing tools and libraries designed for AWS S3."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"On-Premises and Private Cloud Deployment"}),": It can be deployed on-premises or in private cloud environments, offering complete control over your infrastructure."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"High Performance"}),": Designed for high-performance object storage, MinIO is well-suited for demanding workloads in edge computing and hybrid cloud environments."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Lightweight Alternative"}),": MinIO provides a lightweight and efficient alternative for local or private object storage deployments."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Open-Source"}),": Being open-source, MinIO offers flexibility and transparency, benefiting from community contributions and allowing for custom modifications."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"5-event-streaming-layer-kafka-broker",children:"5. Event Streaming Layer (Kafka Broker)"}),"\n",(0,i.jsx)(n.h4,{id:"kafka-broker-kubernetes-pod",children:"Kafka Broker (Kubernetes Pod)"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["Uses ",(0,i.jsx)(n.strong,{children:"Kafka"})," as the ",(0,i.jsx)(n.strong,{children:"central internal event-streaming platform"}),"."]}),"\n",(0,i.jsxs)(n.li,{children:["Manages ",(0,i.jsx)(n.strong,{children:"asynchronous data processing"}),"."]}),"\n",(0,i.jsx)(n.li,{children:"Used to manage many requests to generate images' descriptions and classifications."}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"6-llm-processing-layer",children:"6. LLM Processing Layer"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The system uses Gemini as the ",(0,i.jsx)(n.strong,{children:"Large Language Model (LLM)"})," for processing user requests and generating responses."]}),"\n",(0,i.jsx)(n.li,{children:"The LLM Consumer connects to the Kafka broker to consume messages and produce responses based on user requests."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},1467:(e,n,r)=>{r.d(n,{A:()=>i});const i=r.p+"assets/images/PI-Architecture-v2.0.1-29b239c9a0c5fbc9015d10f933fd2657.svg"},8453:(e,n,r)=>{r.d(n,{R:()=>a,x:()=>o});var i=r(6540);const s={},t=i.createContext(s);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);