"use strict";(self.webpackChunkapp_docs=self.webpackChunkapp_docs||[]).push([[203],{765:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var n=s(4848),r=s(8453);const i={id:"user-stories",title:"User Stories",sidebar_label:"User Stories",sidebar_position:5},o=void 0,a={id:"product-concept/user-stories",title:"User Stories",description:"This section presents the user stories that define the core functionalities of the system, ensuring that the platform meets the needs of citizens, city control operators, and administrators.",source:"@site/docs/product-concept/user-stories.md",sourceDirName:"product-concept",slug:"/product-concept/user-stories",permalink:"/pt/docs/product-concept/user-stories",draft:!1,unlisted:!1,editUrl:"https://github.com/PI-2024-2025-NAP/docs/product-concept/user-stories.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{id:"user-stories",title:"User Stories",sidebar_label:"User Stories",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Use Cases",permalink:"/pt/docs/product-concept/use-cases"},next:{title:"Non Functional Requirements",permalink:"/pt/docs/product-concept/non-functional-requirements"}},c={},l=[{value:"Citizen User Stories",id:"citizen-user-stories",level:2},{value:"City Control Operator User Stories",id:"city-control-operator-user-stories",level:2},{value:"Administrator User Stories",id:"administrator-user-stories",level:2}];function d(e){const t={h2:"h2",hr:"hr",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.p,{children:["This section presents the ",(0,n.jsx)(t.strong,{children:"user stories"})," that define the core functionalities of the system, ensuring that the platform meets the needs of ",(0,n.jsx)(t.strong,{children:"citizens"}),", ",(0,n.jsx)(t.strong,{children:"city control operators"}),", and ",(0,n.jsx)(t.strong,{children:"administrators"}),"."]}),"\n",(0,n.jsx)(t.h2,{id:"citizen-user-stories",children:"Citizen User Stories"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a citizen"}),", I want to easily submit reports of urban issues (e.g., potholes, fallen trees, vandalism) through a mobile app, so that the city can quickly address them."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a citizen"}),", I want to receive a suggested description for faster submission and provide feedback, so that I can help to improve future recommendations."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a citizen"}),", I want to check the status of my reported issues and access a history of my past reports, so that I can track their resolution process."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a citizen"}),', I want to receive notifications when the status of my reported issue changes to "Resolved", so that I stay informed about its progress.']}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"city-control-operator-user-stories",children:"City Control Operator User Stories"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to access a centralized dashboard that organizes all reported incidents by category and location, so that I can efficiently manage, assign, and track the resolution of issues across the city."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to filter reports based on status (e.g., pending, in progress, resolved)."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to access a historical log of past incidents along with details on how they were resolved, so that I can analyze recurring problems and improve response strategies."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", when marking an incident as 'Resolved,' I want to provide an (optional) description of the solution, so that this information can be referenced in the future when handling similar issues."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to access all reports and images related to the same issue in a specific location, so that I can assess the problem from multiple perspectives, reduce redundancy, and avoid duplicate efforts."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to prioritize incidents based on severity and frequency, so that I can address the most critical issues first."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to visualize incidents on a live city map, so that I can quickly identify affected areas and coordinate response teams."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to update the status of incidents in real time, so that citizens can see the progress."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As a city control operator"}),", I want to receive automated alerts when a high number of incidents are reported in the same area within a short period, so that I can quickly assess if an emergency response is needed."]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{}),"\n",(0,n.jsx)(t.h2,{id:"administrator-user-stories",children:"Administrator User Stories"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As an administrator"}),", I want to track system uptime and detect failures in real time, so that I can ensure high availability and reliability."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As an administrator"}),", I want to receive alerts when the system detects anomalies, such as AI failures (e.g., inability to generate a description from an image), so that I can take immediate action to resolve the issue."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As an administrator"}),", I want to have insights into the time taken by the AI model to infer the classification and generate the problem description, so that I can evaluate its effectiveness and trigger model retraining if necessary."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As an administrator"}),", I want to monitor the system's performance, including the number of requests made to each endpoint, to ensure the application's efficient and secure operation."]}),"\n",(0,n.jsxs)(t.li,{children:[(0,n.jsx)(t.strong,{children:"As an administrator"}),", I want to analyze the number of positive and negative feedback responses from users regarding the quality of the AI-generated description, so that I can assess the AI's performance and identify areas for improvement."]}),"\n"]}),"\n",(0,n.jsx)(t.hr,{})]})}function h(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(6540);const r={},i=n.createContext(r);function o(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);